{"version":3,"sources":["rxjs/stopwatch.js","App_rxjs.js","index.js"],"names":["subject","Subject","initialState","isStarted","button1Text","time","hours","minutes","seconds","timeStamp","interval","state","stopwatchStore","init","next","subscribe","setState","start","setInterval","stop","clearInterval","pause","reset","App1","useState","setStopwatchState","useLayoutEffect","className","onClick","event","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEMA,G,MAAU,I,MAAIC,IAEdC,EAAe,CACjBC,WAAW,EACXC,YAAa,QACbC,KAAM,CACFC,MAAO,EACPC,QAAS,EACTC,QAAS,GAEbC,UAAW,EACXC,SAAU,MAGVC,EAAQT,EAmEGU,EAjEQ,CACnBV,eACAW,KAAM,kBAAMb,EAAQc,KAAKH,IACzBI,UAAW,SAAAC,GAAQ,OAAIhB,EAAQe,UAAUC,IACzCC,MAAO,WACHN,EAAK,2BACEA,GADF,IAEDR,WAAW,EACXC,YAAa,OACbM,SAAUQ,aAAY,WAEdP,EADsB,IAAtBA,EAAMN,KAAKG,SAAuC,IAAtBG,EAAMN,KAAKE,QAClC,2BACEI,GADF,IAEDN,KAAM,CACFC,MAAOK,EAAMN,KAAKC,MAAQ,EAC1BC,QAAS,EACTC,QAAS,KAGU,IAAtBG,EAAMN,KAAKG,QACX,2BACEG,GADF,IAEDN,KAAK,2BACEM,EAAMN,MADT,IAEAE,QAASI,EAAMN,KAAKE,QAAU,EAC9BC,QAAS,MAIZ,2BACEG,GADF,IAEDN,KAAK,2BACEM,EAAMN,MADT,IAEAG,QAASG,EAAMN,KAAKG,QAAU,MAG1CR,EAAQc,KAAKH,KACd,OAEPX,EAAQc,KAAKH,IAEjBQ,KAAM,WACFC,cAAcT,EAAMD,UACpBC,EAAQT,EACRF,EAAQc,KAAKH,IAEjBU,MAAO,WACHD,cAAcT,EAAMD,UACpBC,EAAK,2BACEA,GADF,IAEDR,WAAW,EACXC,YAAa,UAEjBJ,EAAQc,KAAKH,IAEjBW,MAAO,WACHF,cAAcT,EAAMD,UACpBC,EAAK,2BACEA,GADF,IAEDN,KAAMH,EAAaG,KACnBD,YAAa,SAEjBJ,EAAQc,KAAKH,K,OCzBNY,MAnDf,WAAiB,IAAD,EACuBC,mBAASZ,EAAeV,cAD/C,mBACLS,EADK,KACEc,EADF,KAoCZ,OAjCAC,2BAAgB,WACZd,EAAeG,UAAUU,GACzBb,EAAeC,SAChB,IA+BC,sBAAKc,UAAU,MAAf,UACI,2CACA,sBAAKA,UAAU,QAAf,UACKhB,EAAMN,KAAKC,MAAQ,GAAK,IAAMK,EAAMN,KAAKC,MAAQK,EAAMN,KAAKC,MADjE,IACyEK,EAAMN,KAAKE,QAAU,GAAK,IAAMI,EAAMN,KAAKE,QAAUI,EAAMN,KAAKE,QADzI,IACmJI,EAAMN,KAAKG,QAAU,GAAK,IAAMG,EAAMN,KAAKG,QAAUG,EAAMN,KAAKG,WAEnN,sBAAKmB,UAAU,UAAf,UACI,wBAAQC,QAnCpB,WACSjB,EAAMR,UAGPS,EAAeO,OAFfP,EAAeK,SAiCX,SAAoCN,EAAMP,cAC1C,wBAAQwB,QA7BpB,SAAqBC,GACbA,EAAMpB,UAAYE,EAAMF,UAAY,KAA2B,IAApBE,EAAMF,UACjDG,EAAeS,SAEVV,EAAMF,UACXgB,GAAkB,SAAAK,GAAS,kCACnBA,GADmB,IAEvBrB,UAAWoB,EAAMpB,iBAsBjB,kBACA,wBAAQmB,QAdpB,WACIhB,EAAeU,QACfV,EAAeK,SAYP,0BCxChBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAKFC,SAASC,eAAe,W","file":"static/js/main.42542c01.chunk.js","sourcesContent":["import { Subject } from \"rxjs\";\r\n\r\nconst subject = new Subject();\r\n\r\nconst initialState = {\r\n    isStarted: false,\r\n    button1Text: \"Start\",\r\n    time: {\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0\r\n    },\r\n    timeStamp: 0,\r\n    interval: null\r\n}\r\n\r\nlet state = initialState;\r\n\r\nconst stopwatchStore = {\r\n    initialState,\r\n    init: () => subject.next(state),\r\n    subscribe: setState => subject.subscribe(setState),\r\n    start: () => {\r\n        state = {\r\n            ...state,\r\n            isStarted: true,\r\n            button1Text: \"Stop\",\r\n            interval: setInterval(() => {\r\n                if (state.time.seconds == 59 && state.time.minutes == 59)\r\n                    state = {\r\n                        ...state,\r\n                        time: {\r\n                            hours: state.time.hours + 1,\r\n                            minutes: 0,\r\n                            seconds: 0\r\n                        }\r\n                    }\r\n                else if (state.time.seconds == 59)\r\n                    state = {\r\n                        ...state,\r\n                        time: {\r\n                            ...state.time,\r\n                            minutes: state.time.minutes + 1,\r\n                            seconds: 0\r\n                        }\r\n                    }\r\n                else\r\n                    state = {\r\n                        ...state,\r\n                        time: {\r\n                            ...state.time,\r\n                            seconds: state.time.seconds + 1\r\n                        }\r\n                    }\r\n                subject.next(state);\r\n            }, 1000)\r\n        }\r\n        subject.next(state);\r\n    },\r\n    stop: () => {\r\n        clearInterval(state.interval);\r\n        state = initialState;\r\n        subject.next(state);\r\n    },\r\n    pause: () => {\r\n        clearInterval(state.interval);\r\n        state = {\r\n            ...state,\r\n            isStarted: false,\r\n            button1Text: \"Start\"\r\n        }\r\n        subject.next(state);\r\n    },\r\n    reset: () => {\r\n        clearInterval(state.interval);\r\n        state = {\r\n            ...state,\r\n            time: initialState.time,\r\n            button1Text: \"Stop\"\r\n        }\r\n        subject.next(state);\r\n    }\r\n}\r\nexport default stopwatchStore;","import './style/index.scss';\r\nimport React, { useState, useLayoutEffect } from \"react\";\r\nimport stopwatchStore from \"./rxjs/stopwatch\";\r\n\r\nfunction App1() {\r\n    const [state, setStopwatchState] = useState(stopwatchStore.initialState);\r\n\r\n    useLayoutEffect(() => {\r\n        stopwatchStore.subscribe(setStopwatchState);\r\n        stopwatchStore.init();\r\n    }, []);\r\n\r\n    function startStopClicked() {\r\n        if (!state.isStarted)\r\n            stopwatchStore.start();\r\n        else\r\n            stopwatchStore.stop();\r\n    }\r\n\r\n    function waitClicked(event) {\r\n        if (event.timeStamp - state.timeStamp < 300 && state.timeStamp !== 0) \r\n            stopwatchStore.pause();\r\n            // console.log(\"pause\");\r\n        else if (state.timeStamp === 0) \r\n            setStopwatchState(prevState => ({\r\n                ...(prevState),\r\n                timeStamp: event.timeStamp\r\n            }))\r\n        else \r\n        setStopwatchState(prevState => ({\r\n            ...(prevState),\r\n            timeStamp: event.timeStamp\r\n        }))\r\n    }\r\n\r\n    function resetClicked() {\r\n        stopwatchStore.reset();\r\n        stopwatchStore.start();\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Stopwatch</h1>\r\n            <div className=\"timer\">\r\n                {state.time.hours < 10 ? \"0\" + state.time.hours : state.time.hours}:{state.time.minutes < 10 ? \"0\" + state.time.minutes : state.time.minutes}:{state.time.seconds < 10 ? \"0\" + state.time.seconds : state.time.seconds}\r\n            </div>\r\n            <div className=\"actions\">\r\n                <button onClick={startStopClicked}>{state.button1Text}</button>\r\n                <button onClick={waitClicked}>Wait</button>\r\n                <button onClick={resetClicked}>Reset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App1;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App1 from './App_rxjs';\r\n\r\n// import App2 from './App_redux';\r\n// import { Provider } from \"react-redux\";\r\n// import store from \"./redux\";\r\n\r\n// commented lines are required for redux-versioned project\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App1 />\r\n    {/* <Provider store={store}>\r\n        <App2 />\r\n      </Provider> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}